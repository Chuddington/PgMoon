<Window x:Class="PgMoon.ShareCalendarWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:app="clr-namespace:PgMoon"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:conv="clr-namespace:Converters"
        Title="Share the calendar"
        WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize"
        SizeToContent="WidthAndHeight"
        Icon="pack://application:,,,/Resources/Main.ico"
        MaxWidth="500">
    <Window.Resources>
        <conv:BooleanToObjectConverter x:Key="convBooleanToObject"/>
        <RoutedCommand x:Key="BrowseCommand"/>
        <RoutedCommand x:Key="ListCommand"/>
        <RoutedCommand x:Key="SaveCommand"/>
        <RoutedCommand x:Key="CancelCommand"/>
        <RoutedCommand x:Key="CancelListCommand"/>
        <CompositeCollection x:Key="VisibleCollapsed">
            <Visibility>Visible</Visibility>
            <Visibility>Collapsed</Visibility>
        </CompositeCollection>
        <CompositeCollection x:Key="CollapsedVisible">
            <Visibility>Collapsed</Visibility>
            <Visibility>Visible</Visibility>
        </CompositeCollection>
        <Style TargetType="{x:Type TextBlock}">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type GroupBox}">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type CheckBox}">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="{StaticResource BrowseCommand}" Executed="OnBrowse"/>
        <CommandBinding Command="{StaticResource ListCommand}" Executed="OnList"/>
        <CommandBinding Command="{StaticResource SaveCommand}" Executed="OnSave"/>
        <CommandBinding Command="{StaticResource CancelCommand}" Executed="OnCancel"/>
        <CommandBinding Command="{StaticResource CancelListCommand}" Executed="OnCancelList"/>
    </Window.CommandBindings>
    <DockPanel Margin="10,10,10,10">
        <DockPanel DockPanel.Dock="Bottom" LastChildFill="False" Margin="0,10,0,0">
            <Button DockPanel.Dock="Right" Command="{StaticResource SaveCommand}" Width="120" Height="24" Margin="10,0,10,0">Save</Button>
            <Button DockPanel.Dock="Right" Command="{StaticResource CancelCommand}" Width="120" Height="24" Margin="0,0,10,0">Cancel</Button>
        </DockPanel>
        <StackPanel>
            <TextBlock TextWrapping="Wrap">You can share moon phases calculated by this application, and add them as event to a calendar. Currently, only Google Calendar is supported.</TextBlock>
            <CheckBox x:Name="checkGoogleCalendar" IsChecked="{Binding AddEvents}" Margin="0,10,0,0">Add events to Google Calendar</CheckBox>
            <Separator Margin="0,10,0,0"/>
            <DockPanel Margin="0,10,0,0">
                <TextBlock DockPanel.Dock="Left">Status:</TextBlock>
                <ScrollViewer Height="50" Margin="5,0,0,0">
                    <ItemsControl ItemsSource="{Binding StatusList}"/>
                </ScrollViewer>
            </DockPanel>
            <Separator Margin="0,10,0,0"/>
            <StackPanel IsEnabled="{Binding ElementName=checkGoogleCalendar, Path=IsChecked}">
                <GroupBox Header="Connection Details" Margin="0,10,0,0">
                    <Grid Margin="8,8,8,8">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Column="0" Grid.Row="0" TextAlignment="Right" VerticalAlignment="Center" Margin="0,0,0,0">Name (informative):</TextBlock>
                        <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding ApplicationName, UpdateSourceTrigger=PropertyChanged}" MaxLength="250" VerticalAlignment="Center" Margin="5,0,0,0"/>
                        <TextBlock Grid.Column="0" Grid.Row="1" TextAlignment="Right" VerticalAlignment="Center" Margin="0,10,0,0">Credential file:</TextBlock>
                        <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding SecretFileName}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" Margin="5,10,0,0"/>
                        <Button Grid.Column="2" Grid.Row="1" Command="{StaticResource BrowseCommand}" VerticalAlignment="Center" Width="120" Height="24" Margin="10,10,0,0">Browse...</Button>
                        <TextBlock Grid.Column="0" Grid.Row="2" TextAlignment="Right" VerticalAlignment="Center" Margin="0,10,0,0">Calendar Name:</TextBlock>
                        <ComboBox Grid.Column="1" Grid.Row="2" ItemsSource="{Binding SharedCalendarEntryList}" SelectedItem="{Binding SelectedCalendarEntry}" VerticalAlignment="Center" Margin="5,10,0,0">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <TextBlock Text="{Binding Name}" Visibility="{Binding CanWrite, Converter={StaticResource convBooleanToObject}, ConverterParameter={StaticResource CollapsedVisible}}"/>
                                        <StackPanel Orientation="Horizontal" Visibility="{Binding CanWrite, Converter={StaticResource convBooleanToObject}, ConverterParameter={StaticResource VisibleCollapsed}}">
                                            <TextBlock Text="{Binding Name}" Foreground="{StaticResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                                            <TextBlock Foreground="{StaticResource {x:Static SystemColors.ControlDarkBrushKey}}" Margin="5,0,0,0">(Reader Only)</TextBlock>
                                        </StackPanel>
                                    </Grid>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <Grid Grid.Column="2" Grid.Row="2" IsEnabled="{Binding IsCredentialConfirmed}" VerticalAlignment="Center" Margin="10,10,0,0">
                            <Button Command="{StaticResource ListCommand}" Visibility="{Binding IsListing, Converter={StaticResource convBooleanToObject}, ConverterParameter={StaticResource VisibleCollapsed}}" Width="120" Height="24">List</Button>
                            <Button Command="{StaticResource CancelListCommand}" Visibility="{Binding IsListing, Converter={StaticResource convBooleanToObject}, ConverterParameter={StaticResource CollapsedVisible}}" Width="120" Height="24">
                                <StackPanel Orientation="Horizontal">
                                    <app:BusyIndicator Foreground="Green" Width="12" Height="12"/>
                                    <TextBlock IsEnabled="{Binding IsListingCancelable}" Margin="2,0,14,0">Cancel</TextBlock>
                                </StackPanel>
                            </Button>
                        </Grid>
                    </Grid>
                </GroupBox>
                <GroupBox Header="Shared information" Margin="0,10,0,0">
                    <Grid Margin="8,8,8,8">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Column="0" Grid.Row="0" TextAlignment="Right" VerticalAlignment="Center" Margin="0,0,0,0">Add upcoming events for:</TextBlock>
                        <StackPanel Grid.Column="1" Grid.Row="0" Orientation="Horizontal" Margin="5,0,0,0">
                            <TextBox Text="{Binding UpcomingDays, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Width="50"/>
                            <TextBlock VerticalAlignment="Center" Margin="5,0,0,0">days</TextBlock>
                        </StackPanel>
                        <CheckBox Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" IsChecked="{Binding WithPhaseName}" Checked="OnInfoChanged" Unchecked="OnInfoChanged" VerticalAlignment="Center" Margin="0,10,0,0">Phase name</CheckBox>
                        <CheckBox x:Name="checkMushroomFarming" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2" IsChecked="{Binding WithMushroomFarming}" Checked="OnInfoChanged" Unchecked="OnInfoChanged" VerticalAlignment="Center" Margin="0,10,0,0">Mushrooms growing robustly</CheckBox>
                        <CheckBox Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="3" IsChecked="{Binding WithMushroomFarmingComments}" IsEnabled="{Binding ElementName=checkMushroomFarming, Path=IsChecked}" Checked="OnInfoChanged" Unchecked="OnInfoChanged" VerticalAlignment="Center" Margin="10,10,0,0">Insert comments</CheckBox>
                        <CheckBox Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="4" IsChecked="{Binding WithRahuBoat}" Checked="OnInfoChanged" Unchecked="OnInfoChanged" VerticalAlignment="Center" Margin="0,10,0,0">Rahu boat destination</CheckBox>
                        <CheckBox Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="5" IsChecked="{Binding WithDarkChapel}" Checked="OnInfoChanged" Unchecked="OnInfoChanged" VerticalAlignment="Center" Margin="0,10,0,0">Dark Chapel entrance</CheckBox>
                        <CheckBox x:Name="checkFreeText" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="6" IsChecked="{Binding WithFreeText}" Checked="OnInfoChanged" Unchecked="OnInfoChanged" VerticalAlignment="Center" Margin="0,10,0,0">Add to description:</CheckBox>
                        <TextBox Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="7" Text="{Binding FreeText}" IsEnabled="{Binding ElementName=checkFreeText, Path=IsChecked}" MaxLength="2000" TextWrapping="Wrap" AcceptsReturn="True" Margin="10,10,0,0" Height="50"/>
                    </Grid>
                </GroupBox>
            </StackPanel>
        </StackPanel>
    </DockPanel>
</Window>
